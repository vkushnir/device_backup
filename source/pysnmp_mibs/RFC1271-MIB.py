#
# PySNMP MIB module RFC1271-MIB (http://pysnmp.sf.net)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/RFC1271-MIB
# Produced by pysmi-0.0.7 at Fri Feb 17 12:48:35 2017
# On host 5641388e757d platform Linux version 4.4.0-62-generic by user root
# Using Python version 2.7.13 (default, Dec 22 2016, 09:22:15) 
#
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
( NotificationGroup, ModuleCompliance, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
( Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, mib_2, IpAddress, TimeTicks, Counter64, Unsigned32, iso, Gauge32, NotificationType, ModuleIdentity, ObjectIdentity, Bits, Counter32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "mib-2", "IpAddress", "TimeTicks", "Counter64", "Unsigned32", "iso", "Gauge32", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Bits", "Counter32")
( DisplayString, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rmon = MibIdentifier((1, 3, 6, 1, 2, 1, 16))
class OwnerString(DisplayString):
    pass

class EntryStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4,)
    namedValues = NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4),)

statistics = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 1))
history = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 2))
alarm = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 3))
hosts = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 4))
hostTopN = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 5))
matrix = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 6))
filter = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 7))
capture = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 8))
event = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 9))
etherStatsTable = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 1), )
etherStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "etherStatsIndex"))
etherStatsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
etherStatsDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
etherStatsDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
etherStatsOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
etherStatsPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
etherStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
etherStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
etherStatsCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
etherStatsUndersizePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
etherStatsOversizePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
etherStatsFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
etherStatsJabbers = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
etherStatsCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
etherStatsPkts64Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
etherStatsPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
etherStatsPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
etherStatsPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
etherStatsPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
etherStatsPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
etherStatsOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 20), OwnerString()).setMaxAccess("readwrite")
etherStatsStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 21), EntryStatus()).setMaxAccess("readwrite")
historyControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 1), )
historyControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "historyControlIndex"))
historyControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
historyControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
historyControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535)).clone(50)).setMaxAccess("readwrite")
historyControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
historyControlInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,3600)).clone(1800)).setMaxAccess("readwrite")
historyControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 6), OwnerString()).setMaxAccess("readwrite")
historyControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 7), EntryStatus()).setMaxAccess("readwrite")
etherHistoryTable = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 2), )
etherHistoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "etherHistoryIndex"), (0, "RFC1271-MIB", "etherHistorySampleIndex"))
etherHistoryIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
etherHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
etherHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
etherHistoryDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
etherHistoryOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
etherHistoryPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
etherHistoryBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
etherHistoryMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
etherHistoryCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
etherHistoryUndersizePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
etherHistoryOversizePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
etherHistoryFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
etherHistoryJabbers = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
etherHistoryCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
etherHistoryUtilization = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,10000))).setMaxAccess("readonly")
alarmTable = MibTable((1, 3, 6, 1, 2, 1, 16, 3, 1), )
alarmEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 3, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "alarmIndex"))
alarmIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
alarmInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
alarmVariable = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
alarmSampleType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("absoluteValue", 1), ("deltaValue", 2),))).setMaxAccess("readwrite")
alarmValue = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
alarmStartupAlarm = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("risingAlarm", 1), ("fallingAlarm", 2), ("risingOrFallingAlarm", 3),))).setMaxAccess("readwrite")
alarmRisingThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
alarmFallingThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
alarmRisingEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readwrite")
alarmFallingEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readwrite")
alarmOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 11), OwnerString()).setMaxAccess("readwrite")
alarmStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 12), EntryStatus()).setMaxAccess("readwrite")
hostControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 1), )
hostControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "hostControlIndex"))
hostControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
hostControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
hostControlTableSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
hostControlLastDeleteTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
hostControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 5), OwnerString()).setMaxAccess("readwrite")
hostControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 6), EntryStatus()).setMaxAccess("readwrite")
hostTable = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 2), )
hostEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "hostIndex"), (0, "RFC1271-MIB", "hostAddress"))
hostAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 1), OctetString()).setMaxAccess("readonly")
hostCreationOrder = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
hostIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
hostInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
hostOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
hostInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
hostOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
hostOutErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
hostOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
hostOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
hostTimeTable = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 3), )
hostTimeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 3, 1), ).setIndexNames((0, "RFC1271-MIB", "hostTimeIndex"), (0, "RFC1271-MIB", "hostTimeCreationOrder"))
hostTimeAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 1), OctetString()).setMaxAccess("readonly")
hostTimeCreationOrder = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
hostTimeIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
hostTimeInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
hostTimeOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
hostTimeInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
hostTimeOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 7), Counter32()).setMaxAccess("readonly")
hostTimeOutErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 8), Counter32()).setMaxAccess("readonly")
hostTimeOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 9), Counter32()).setMaxAccess("readonly")
hostTimeOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 10), Counter32()).setMaxAccess("readonly")
hostTopNControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 5, 1), )
hostTopNControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 5, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "hostTopNControlIndex"))
hostTopNControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
hostTopNHostIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readwrite")
hostTopNRateBase = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6, 7,)).clone(namedValues=NamedValues(("hostTopNInPkts", 1), ("hostTopNOutPkts", 2), ("hostTopNInOctets", 3), ("hostTopNOutOctets", 4), ("hostTopNOutErrors", 5), ("hostTopNOutBroadcastPkts", 6), ("hostTopNOutMulticastPkts", 7),))).setMaxAccess("readwrite")
hostTopNTimeRemaining = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
hostTopNDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
hostTopNRequestedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 6), Integer32().clone(10)).setMaxAccess("readwrite")
hostTopNGrantedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
hostTopNStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
hostTopNOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 9), OwnerString()).setMaxAccess("readwrite")
hostTopNStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 10), EntryStatus()).setMaxAccess("readwrite")
hostTopNTable = MibTable((1, 3, 6, 1, 2, 1, 16, 5, 2), )
hostTopNEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 5, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "hostTopNReport"), (0, "RFC1271-MIB", "hostTopNIndex"))
hostTopNReport = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
hostTopNIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
hostTopNAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 3), OctetString()).setMaxAccess("readonly")
hostTopNRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
matrixControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 1), )
matrixControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "matrixControlIndex"))
matrixControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
matrixControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
matrixControlTableSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
matrixControlLastDeleteTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
matrixControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 5), OwnerString()).setMaxAccess("readwrite")
matrixControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 6), EntryStatus()).setMaxAccess("readwrite")
matrixSDTable = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 2), )
matrixSDEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "matrixSDIndex"), (0, "RFC1271-MIB", "matrixSDSourceAddress"), (0, "RFC1271-MIB", "matrixSDDestAddress"))
matrixSDSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 1), OctetString()).setMaxAccess("readonly")
matrixSDDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 2), OctetString()).setMaxAccess("readonly")
matrixSDIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
matrixSDPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 4), Counter32()).setMaxAccess("readonly")
matrixSDOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 5), Counter32()).setMaxAccess("readonly")
matrixSDErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 6), Counter32()).setMaxAccess("readonly")
matrixDSTable = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 3), )
matrixDSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 3, 1), ).setIndexNames((0, "RFC1271-MIB", "matrixDSIndex"), (0, "RFC1271-MIB", "matrixDSDestAddress"), (0, "RFC1271-MIB", "matrixDSSourceAddress"))
matrixDSSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 1), OctetString()).setMaxAccess("readonly")
matrixDSDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 2), OctetString()).setMaxAccess("readonly")
matrixDSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
matrixDSPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 4), Counter32()).setMaxAccess("readonly")
matrixDSOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 5), Counter32()).setMaxAccess("readonly")
matrixDSErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 6), Counter32()).setMaxAccess("readonly")
filterTable = MibTable((1, 3, 6, 1, 2, 1, 16, 7, 1), )
filterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 7, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "filterIndex"))
filterIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
filterChannelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readwrite")
filterPktDataOffset = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
filterPktData = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
filterPktDataMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
filterPktDataNotMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
filterPktStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
filterPktStatusMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
filterPktStatusNotMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
filterOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 10), OwnerString()).setMaxAccess("readwrite")
filterStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 11), EntryStatus()).setMaxAccess("readwrite")
channelTable = MibTable((1, 3, 6, 1, 2, 1, 16, 7, 2), )
channelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 7, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "channelIndex"))
channelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
channelIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readwrite")
channelAcceptType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("acceptMatched", 1), ("acceptFailed", 2),))).setMaxAccess("readwrite")
channelDataControl = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("on", 1), ("off", 2),)).clone('off')).setMaxAccess("readwrite")
channelTurnOnEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readwrite")
channelTurnOffEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readwrite")
channelEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readwrite")
channelEventStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("eventReady", 1), ("eventFired", 2), ("eventAlwaysReady", 3),)).clone('eventReady')).setMaxAccess("readwrite")
channelMatches = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
channelDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,127))).setMaxAccess("readwrite")
channelOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 11), OwnerString()).setMaxAccess("readwrite")
channelStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 12), EntryStatus()).setMaxAccess("readwrite")
bufferControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 8, 1), )
bufferControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 8, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "bufferControlIndex"))
bufferControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
bufferControlChannelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readwrite")
bufferControlFullStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("spaceAvailable", 1), ("full", 2),))).setMaxAccess("readonly")
bufferControlFullAction = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("lockWhenFull", 1), ("wrapWhenFull", 2),))).setMaxAccess("readwrite")
bufferControlCaptureSliceSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 5), Integer32().clone(100)).setMaxAccess("readwrite")
bufferControlDownloadSliceSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 6), Integer32().clone(100)).setMaxAccess("readwrite")
bufferControlDownloadOffset = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
bufferControlMaxOctetsRequested = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 8), Integer32().clone(-1)).setMaxAccess("readwrite")
bufferControlMaxOctetsGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 9), Integer32()).setMaxAccess("readonly")
bufferControlCapturedPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
bufferControlTurnOnTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
bufferControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 12), OwnerString()).setMaxAccess("readwrite")
bufferControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 13), EntryStatus()).setMaxAccess("readwrite")
captureBufferTable = MibTable((1, 3, 6, 1, 2, 1, 16, 8, 2), )
captureBufferEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 8, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "captureBufferControlIndex"), (0, "RFC1271-MIB", "captureBufferIndex"))
captureBufferControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
captureBufferIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 2), Integer32()).setMaxAccess("readonly")
captureBufferPacketID = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
captureBufferPacketData = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 4), OctetString()).setMaxAccess("readonly")
captureBufferPacketLength = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
captureBufferPacketTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
captureBufferPacketStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 7), Integer32()).setMaxAccess("readonly")
eventTable = MibTable((1, 3, 6, 1, 2, 1, 16, 9, 1), )
eventEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 9, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "eventIndex"))
eventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
eventDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,127))).setMaxAccess("readwrite")
eventType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("none", 1), ("log", 2), ("snmp-trap", 3), ("log-and-trap", 4),))).setMaxAccess("readwrite")
eventCommunity = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,127))).setMaxAccess("readwrite")
eventLastTimeSent = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
eventOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 6), OwnerString()).setMaxAccess("readwrite")
eventStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 7), EntryStatus()).setMaxAccess("readwrite")
logTable = MibTable((1, 3, 6, 1, 2, 1, 16, 9, 2), )
logEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 9, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "logEventIndex"), (0, "RFC1271-MIB", "logIndex"))
logEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65535))).setMaxAccess("readonly")
logIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 2), Integer32()).setMaxAccess("readonly")
logTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
logDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,255))).setMaxAccess("readonly")
risingAlarm = NotificationType((1, 3, 6, 1, 2, 1, 16) + (0,1)).setObjects(*(("RFC1271-MIB", "alarmIndex"), ("RFC1271-MIB", "alarmVariable"), ("RFC1271-MIB", "alarmSampleType"), ("RFC1271-MIB", "alarmValue"), ("RFC1271-MIB", "alarmRisingThreshold"),))
fallingAlarm = NotificationType((1, 3, 6, 1, 2, 1, 16) + (0,2)).setObjects(*(("RFC1271-MIB", "alarmIndex"), ("RFC1271-MIB", "alarmVariable"), ("RFC1271-MIB", "alarmSampleType"), ("RFC1271-MIB", "alarmValue"), ("RFC1271-MIB", "alarmFallingThreshold"),))
mibBuilder.exportSymbols("RFC1271-MIB", hostTopNAddress=hostTopNAddress, hostTopNControlTable=hostTopNControlTable, filterPktStatusNotMask=filterPktStatusNotMask, matrixControlTableSize=matrixControlTableSize, matrixControlStatus=matrixControlStatus, hostTimeOutOctets=hostTimeOutOctets, etherStatsPkts65to127Octets=etherStatsPkts65to127Octets, matrixSDEntry=matrixSDEntry, hostTimeIndex=hostTimeIndex, matrixDSOctets=matrixDSOctets, alarmStartupAlarm=alarmStartupAlarm, matrixControlIndex=matrixControlIndex, bufferControlIndex=bufferControlIndex, bufferControlOwner=bufferControlOwner, matrixControlEntry=matrixControlEntry, hostEntry=hostEntry, hostTopNControlEntry=hostTopNControlEntry, etherHistoryTable=etherHistoryTable, eventEntry=eventEntry, hostControlTable=hostControlTable, hostIndex=hostIndex, hostTopNRequestedSize=hostTopNRequestedSize, hostControlStatus=hostControlStatus, etherStatsEntry=etherStatsEntry, bufferControlMaxOctetsGranted=bufferControlMaxOctetsGranted, matrixSDSourceAddress=matrixSDSourceAddress, etherStatsJabbers=etherStatsJabbers, bufferControlFullAction=bufferControlFullAction, hostAddress=hostAddress, etherStatsPkts64Octets=etherStatsPkts64Octets, matrixControlDataSource=matrixControlDataSource, matrixDSErrors=matrixDSErrors, alarmRisingThreshold=alarmRisingThreshold, hostTopNDuration=hostTopNDuration, logEventIndex=logEventIndex, captureBufferPacketLength=captureBufferPacketLength, matrixSDPkts=matrixSDPkts, hostTopNTable=hostTopNTable, matrixSDIndex=matrixSDIndex, alarmRisingEventIndex=alarmRisingEventIndex, etherStatsUndersizePkts=etherStatsUndersizePkts, captureBufferPacketID=captureBufferPacketID, bufferControlCapturedPackets=bufferControlCapturedPackets, hostOutBroadcastPkts=hostOutBroadcastPkts, historyControlDataSource=historyControlDataSource, eventType=eventType, hostTimeOutErrors=hostTimeOutErrors, bufferControlTable=bufferControlTable, alarmVariable=alarmVariable, historyControlStatus=historyControlStatus, hostTopNReport=hostTopNReport, hostCreationOrder=hostCreationOrder, etherStatsCRCAlignErrors=etherStatsCRCAlignErrors, hostTopNStartTime=hostTopNStartTime, etherStatsDataSource=etherStatsDataSource, filterPktDataOffset=filterPktDataOffset, statistics=statistics, channelMatches=channelMatches, matrixSDTable=matrixSDTable, eventLastTimeSent=eventLastTimeSent, filterPktStatus=filterPktStatus, etherHistoryJabbers=etherHistoryJabbers, etherStatsPkts512to1023Octets=etherStatsPkts512to1023Octets, channelEntry=channelEntry, risingAlarm=risingAlarm, eventStatus=eventStatus, hosts=hosts, etherStatsOctets=etherStatsOctets, logEntry=logEntry, matrixControlLastDeleteTime=matrixControlLastDeleteTime, alarmSampleType=alarmSampleType, channelTable=channelTable, alarmFallingEventIndex=alarmFallingEventIndex, hostTable=hostTable, hostTimeAddress=hostTimeAddress, etherStatsIndex=etherStatsIndex, bufferControlEntry=bufferControlEntry, bufferControlTurnOnTime=bufferControlTurnOnTime, historyControlOwner=historyControlOwner, logTime=logTime, channelDataControl=channelDataControl, hostTimeTable=hostTimeTable, historyControlEntry=historyControlEntry, etherStatsPkts1024to1518Octets=etherStatsPkts1024to1518Octets, historyControlBucketsRequested=historyControlBucketsRequested, event=event, OwnerString=OwnerString, filterEntry=filterEntry, etherHistoryOversizePkts=etherHistoryOversizePkts, alarmValue=alarmValue, historyControlIndex=historyControlIndex, etherStatsPkts128to255Octets=etherStatsPkts128to255Octets, hostControlTableSize=hostControlTableSize, hostTimeOutBroadcastPkts=hostTimeOutBroadcastPkts, hostTimeEntry=hostTimeEntry, alarmFallingThreshold=alarmFallingThreshold, etherStatsStatus=etherStatsStatus, etherStatsTable=etherStatsTable, alarmStatus=alarmStatus, eventCommunity=eventCommunity, etherHistoryBroadcastPkts=etherHistoryBroadcastPkts, etherHistoryUndersizePkts=etherHistoryUndersizePkts, matrixDSPkts=matrixDSPkts, etherStatsBroadcastPkts=etherStatsBroadcastPkts, etherHistoryUtilization=etherHistoryUtilization, filterOwner=filterOwner, historyControlBucketsGranted=historyControlBucketsGranted, etherHistoryIntervalStart=etherHistoryIntervalStart, matrixControlTable=matrixControlTable, eventOwner=eventOwner, matrixSDDestAddress=matrixSDDestAddress, etherHistoryDropEvents=etherHistoryDropEvents, eventIndex=eventIndex, eventTable=eventTable, hostControlDataSource=hostControlDataSource, matrixDSSourceAddress=matrixDSSourceAddress, filterPktDataNotMask=filterPktDataNotMask, etherHistoryCRCAlignErrors=etherHistoryCRCAlignErrors, filterTable=filterTable, matrixSDErrors=matrixSDErrors, hostTopNControlIndex=hostTopNControlIndex, etherStatsMulticastPkts=etherStatsMulticastPkts, etherHistoryMulticastPkts=etherHistoryMulticastPkts, matrixControlOwner=matrixControlOwner, etherStatsOwner=etherStatsOwner, hostTopNRateBase=hostTopNRateBase, channelEventIndex=channelEventIndex, hostOutErrors=hostOutErrors, filterPktStatusMask=filterPktStatusMask, bufferControlStatus=bufferControlStatus, etherStatsPkts=etherStatsPkts, filter=filter, matrixSDOctets=matrixSDOctets, captureBufferTable=captureBufferTable, hostTopNStatus=hostTopNStatus, channelStatus=channelStatus, historyControlTable=historyControlTable, captureBufferPacketData=captureBufferPacketData, hostTopNHostIndex=hostTopNHostIndex, captureBufferControlIndex=captureBufferControlIndex, alarm=alarm, alarmOwner=alarmOwner, filterStatus=filterStatus, logIndex=logIndex, capture=capture, captureBufferPacketStatus=captureBufferPacketStatus, hostTopNOwner=hostTopNOwner, channelDescription=channelDescription, channelOwner=channelOwner, hostControlEntry=hostControlEntry, hostTopNEntry=hostTopNEntry, bufferControlDownloadOffset=bufferControlDownloadOffset, hostControlLastDeleteTime=hostControlLastDeleteTime, captureBufferEntry=captureBufferEntry, hostTimeOutMulticastPkts=hostTimeOutMulticastPkts, hostTopNGrantedSize=hostTopNGrantedSize, filterIndex=filterIndex, etherStatsDropEvents=etherStatsDropEvents, rmon=rmon, hostControlOwner=hostControlOwner, etherHistoryEntry=etherHistoryEntry, captureBufferPacketTime=captureBufferPacketTime, alarmInterval=alarmInterval, logTable=logTable, filterChannelIndex=filterChannelIndex, historyControlInterval=historyControlInterval, channelEventStatus=channelEventStatus, matrixDSIndex=matrixDSIndex, hostTopNIndex=hostTopNIndex, etherHistoryCollisions=etherHistoryCollisions, etherHistoryFragments=etherHistoryFragments, hostControlIndex=hostControlIndex, etherStatsOversizePkts=etherStatsOversizePkts, hostTimeInPkts=hostTimeInPkts, eventDescription=eventDescription, etherHistorySampleIndex=etherHistorySampleIndex, matrix=matrix, etherStatsPkts256to511Octets=etherStatsPkts256to511Octets, hostTopNRate=hostTopNRate, etherHistoryOctets=etherHistoryOctets, hostTimeOutPkts=hostTimeOutPkts, channelIndex=channelIndex, etherStatsFragments=etherStatsFragments, channelAcceptType=channelAcceptType, etherStatsCollisions=etherStatsCollisions, bufferControlMaxOctetsRequested=bufferControlMaxOctetsRequested, history=history, alarmEntry=alarmEntry, bufferControlChannelIndex=bufferControlChannelIndex, matrixDSEntry=matrixDSEntry, fallingAlarm=fallingAlarm, filterPktData=filterPktData, hostOutMulticastPkts=hostOutMulticastPkts, bufferControlCaptureSliceSize=bufferControlCaptureSliceSize, hostTimeInOctets=hostTimeInOctets, hostInOctets=hostInOctets, etherHistoryIndex=etherHistoryIndex, matrixDSTable=matrixDSTable, alarmIndex=alarmIndex, filterPktDataMask=filterPktDataMask, matrixDSDestAddress=matrixDSDestAddress, channelTurnOffEventIndex=channelTurnOffEventIndex, bufferControlDownloadSliceSize=bufferControlDownloadSliceSize, hostInPkts=hostInPkts, hostTopNTimeRemaining=hostTopNTimeRemaining, etherHistoryPkts=etherHistoryPkts, hostTimeCreationOrder=hostTimeCreationOrder, channelTurnOnEventIndex=channelTurnOnEventIndex, hostOutPkts=hostOutPkts, alarmTable=alarmTable, captureBufferIndex=captureBufferIndex, bufferControlFullStatus=bufferControlFullStatus, hostOutOctets=hostOutOctets, EntryStatus=EntryStatus, logDescription=logDescription, hostTopN=hostTopN, channelIfIndex=channelIfIndex)
